///////////////////////////////////////////////////////////
//  RentalPricingStrategy.cs
//  Implementation of the Class RentalPricingStrategy
//  Generated by Enterprise Architect
//  Created on:      04-Dec-2023 4:24:26 PM
//  Original author: User
///////////////////////////////////////////////////////////

using OOSEStore.Models;

namespace OOSEStore.Strategies
{
    public abstract class RentalPricingStrategy : PricingStrategy
    {
        protected bool IsValidProductType(ProductTypes productTypes) { return m_ProductType == productTypes; }
        protected bool IsValidSaleType(SaleTypes saleTypes) { return m_SaleType == saleTypes; }

        public override decimal CalculatePrice(Transaction transaction, Customer customer, SaleItem item)
        {
            if (IsValidSaleType(item.GetSaleType()))
                return base.CalculatePrice(transaction, customer, item);
            throw new ArgumentException(nameof(item));
        }

        protected override decimal InternalCalculate(Transaction transaction, Customer customer, SaleItem item)
        {
            return item.GetQuantity() * m_BaseValue;
        }

    }//end RentalPricingStrategy

}//end namespace Store